---
dependency:
  name: shell
  command: "${MOLECULE_SCENARIO_DIRECTORY}/tools/install-dependencies"

driver:
  name: docker

platforms:
  # On "${name:-${image:-debian}", the last brace does not miss, it works like that...
  # The env var should be used when the image variable refers to a full registry path like registry.access.redhat.com/ubi8/ubi
  - &cluster_node
    name: claranet_mariadb_${name:-${image:-debian}-${tag:-latest}-${scenario:-default}-1
    image: ${image:-debian}:${tag:-latest}
    privileged: true
    tty: true
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    stop_signal: "SIGRTMIN+3"
    capabilities:
      - SYS_ADMIN
      - SYS_TIME
      - LINUX_IMMUTABLE
    command: "/lib/systemd/systemd"
    networks:
      - name: ansible-role-mariadb-network-${name:-${image:-debian}-${tag:-latest}

  - &cluster_node_replica
    <<: *cluster_node
    name: claranet_mariadb_${name:-${image:-debian}-${tag:-latest}-${scenario:-default}-2
    groups:
      - replica

  - <<: *cluster_node_replica
    name: claranet_mariadb_${name:-${image:-debian}-${tag:-latest}-${scenario:-default}-3

provisioner:
  name: ansible
  env:
    ANSIBLE_FORCE_COLOR: "true"
    ANSIBLE_LOAD_CALLBACK_PLUGINS: "true"
    ANSIBLE_CALLBACKS_ENABLED: "ansible.posix.profile_tasks"
    ANSIBLE_STDOUT_CALLBACK: "ansible.posix.debug"
  options:
    v: true
  ansible_args:
    - -v
    - -e="mariadb_debug=true"
  inventory:
    group_vars:
      all:
        mariadb_skip_name_resolve: false
        mariadb_data_at_rest_encryption: true
        mariadb_encryption_keygen_auto: true
        mariadb_encryption_keygen_count: 3
        mariadb_innodb_encrypt_tables: "ON"
        mariadb_innodb_encrypt_temporary_tables: "ON"
        mariadb_innodb_encrypt_log: "ON"
        mariadb_encrypt_binlog: "ON"
        mariadb_aria_encrypt_tables: "ON"
        mariadb_encrypt_tmp_disk_tables: 1
        mariadb_encrypt_tmp_files: 1
        mariadb_admin_password: "{{ ansible_machine_id | hash('sha1') | truncate(24, True, '') }}"
        mariadb_replication_primary: claranet_mariadb_${name:-${image:-debian}-${tag:-latest}-${scenario:-default}-1
        mariadb_replication_username: replic
        mariadb_replication_password: ReplicationPassword
        mariadb_users:
          - name: david
            password: davixd
            host: "%"
            priv: "*.*:ALL"
            state: present
      replica:
        mariadb_replication_role: replica
        mariadb_replication_primary_socket: "{{ hostvars[mariadb_replication_primary]['_mariadb_socket'] }}"
    host_vars:
      claranet_mariadb_${name:-${image:-debian}-${tag:-latest}-${scenario:-default}-1:
        mariadb_server_id: 1
        mariadb_bind_address: 0.0.0.0
        mariadb_replication_role: "primary"
        mariadb_max_binlog_size: 100M
        mariadb_binlog_format: MIXED
        mariadb_expire_logs_days: 10
        mariadb_databases:
          - name: test1
          - name: test2
          - name: db1
          - name: db2
          - name: db3
          - name: db
            state: present
            replicate: true
      claranet_mariadb_${name:-${image:-debian}-${tag:-latest}-${scenario:-default}-2:
        mariadb_server_id: 2
      claranet_mariadb_${name:-${image:-debian}-${tag:-latest}-${scenario:-default}-3:
        mariadb_server_id: 3

verifier:
  name: ansible

lint: |
  set -e
  yamllint .
  ansible-lint

---
- name: "Ensure MariaDB daemon is started"
  ansible.builtin.service:
    name: "{{ _mariadb_daemon }}"
    state: started

- name: Copy .my.cnf file with root password credentials.
  ansible.builtin.template:
    src: "root-my.cnf.j2"
    dest: "{{ mariadb_admin_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600
  when: mariadb_admin_force_password_update

- name: Get list of hosts for the anonymous user.
  community.mysql.mysql_query:
    login_db: "mysql"
    login_unix_socket: "{{ _mariadb_socket }}"
    query: SELECT Host FROM mysql.user WHERE User = %s
    positional_args:
      - ''
  register: _mariadb_anonymous_hosts

- name: Remove anonymous MariaDB users.
  community.mysql.mysql_query:
    login_db: "mysql"
    login_unix_socket: "{{ _mariadb_socket }}"
    query: DELETE FROM mysql.user WHERE User=%s AND Host=%s
    positional_args:
      - ''
      - "{{ item.Host }}"
  loop: "{{ _mariadb_anonymous_hosts.query_result | first }}"
  when:
    - not ansible_check_mode
    - _mariadb_anonymous_hosts.rowcount[0] != 0

- name: Get list of hosts for the root user.
  community.mysql.mysql_query:
    login_db: "mysql"
    login_unix_socket: "{{ _mariadb_socket }}"
    query: SELECT Host FROM mysql.user WHERE User = %s ORDER BY (Host='localhost') ASC
    positional_args:
      - "{{ mariadb_admin_user }}"
  register: _mariadb_root_hosts

- name: Disallow root login remotely
  community.mysql.mysql_user:
    name: "{{ mariadb_admin_user }}"
    login_unix_socket: "{{ _mariadb_socket }}"
    host: "{{ item.Host }}"
    priv: "*.*:ALL,GRANT"
    state: absent
  loop: '{{ _mariadb_root_hosts.query_result[0] | rejectattr("Host", "in", "localhost,::1,127.0.0.1") | list }}'
  when: not ansible_check_mode

- name: Update MariaDB root password for localhost root account
  community.mysql.mysql_user:
    name: "{{ mariadb_admin_user }}"
    password: "{{ mariadb_admin_password }}"
    login_unix_socket: "{{ _mariadb_socket }}"
    host: "localhost"
  register: _mariadb_root_password_update
  when:
    - not ansible_check_mode
    - _mariadb_root_hosts.rowcount[0] != 0
    - mariadb_admin_force_password_update

- name: Output results of updating mysql root password
  ansible.builtin.debug:
    var: _mariadb_root_password_update
  when: mariadb_debug

- name: Remove MariaDB test database.
  community.mysql.mysql_db:
    name: test
    state: absent
    login_unix_socket: "{{ _mariadb_socket }}"

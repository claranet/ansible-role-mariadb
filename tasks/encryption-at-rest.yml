---
- name: Create {{ mariadb_file_key_management_dir }}
  ansible.builtin.file:
    path: "{{ mariadb_file_key_management_dir }}"
    owner: mysql
    group: mysql
    mode: 0755
    state: directory

- name: Fail when keygenmode is manual and mariadb_encryption_keys or mariadb_encryption_password is not defined
  ansible.builtin.fail:
  when:
    - not mariadb_encryption_keygen_auto
    - (mariadb_encryption_keys is not defined) or (mariadb_encryption_password is not defined) or
      (mariadb_encryption_keys | length <= 0) or (mariadb_encryption_password | length <=0)

- name: "Stat {{ _mariadb_file_key_management_filename_path }}"
  ansible.builtin.stat:
    path: "{{ mariadb_file_key_management_dir }}/{{ mariadb_file_key_management_filename }}"
  register: _mariadb_filekeypass_stat

- name: "Create encrypted file when user set its own keys"
  ansible.builtin.template:
    src: "{{ item.default_name }}"
    dest: "{{ mariadb_file_key_management_dir }}/{{ item.custom_name }}"
    owner: mysql
    group: mysql
    mode: 0600
  loop:
    - default_name: keyfile
      custom_name: keyfile
    - default_name: keyfile.key
      custom_name: "{{ mariadb_file_key_management_filekey }}"
  when:
    - not _mariadb_filekeypass_stat.stat.exists or mariadb_file_key_management_override
    - not mariadb_encryption_keygen_auto
    - ( mariadb_encryption_keys is defined ) and ( mariadb_encryption_keys | length > 0 )
    - ( mariadb_encryption_password is defined ) and ( mariadb_encryption_password | length > 0 )

- name: "Create encrypted file automatically"
  when:
    - not _mariadb_filekeypass_stat.stat.exists or mariadb_file_key_management_override
    - mariadb_encryption_keygen_auto
  no_log: "{{ not mariadb_debug }}"
  block:
    - name: "Generate key for encryption"
      ansible.builtin.shell:
        cmd: "openssl rand -hex 128 > {{ mariadb_file_key_management_filekey }}"
        chdir: "{{ mariadb_file_key_management_dir }}"
      register: _mariadb_key_generation
      changed_when: _mariadb_key_generation.rc != 0

    - name: "Create a variable containing the complete opennssl command to generate the correct number of encryption keys"
      ansible.builtin.set_fact:
        _mariadb_openssl_genkey_cmd: "{{ _mariadb_openssl_genkey_cmd | d('') + 'openssl rand -hex 32 ;' }}"
      loop: "{{ range(1, mariadb_encryption_keygen_count | int + 1) | list }}"

    - name: "Generate the encryption keys with openssl"
      ansible.builtin.shell: "{{ _mariadb_openssl_genkey_cmd }}"
      register: _mariadb_opensslcmd_encryption_keys
      changed_when: _mariadb_opensslcmd_encryption_keys.rc != 0
      tags:
        - skip_ansible_lint

    - name: Build the encryption keys string version
      ansible.builtin.set_fact:
        mariadb_encryption_keys_string: |
          {% for key in _mariadb_opensslcmd_encryption_keys.stdout_lines %}
          {{ loop.index }};{{ key }}
          {% endfor %}

    - name: "Store encryption keys locally"
      ansible.builtin.copy:
        content: "{{ mariadb_encryption_keys_string }}"
        dest: "{{ mariadb_file_key_management_dir }}/keyfile"
        owner: mysql
        group: mysql
        mode: 0600

- name: "Generate the encrypted key file using openssl enc"
  ansible.builtin.command: "openssl enc -aes-256-cbc -md sha1 -in keyfile -pass file:{{ mariadb_file_key_management_filekey }} -out {{ mariadb_file_key_management_filename }}"
  args:
    chdir: "{{ mariadb_file_key_management_dir }}"
  register: _mariadb_opensslcmd_encryption_keyfile
  changed_when: _mariadb_opensslcmd_encryption_keyfile.rc != 0
  when: not _mariadb_filekeypass_stat.stat.exists or mariadb_file_key_management_override
  no_log: "{{ not mariadb_debug }}"

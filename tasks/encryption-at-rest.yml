---
- name: "Ensure encryption key is defined if keygenmode is auto"
  when: mariadb_encryption_keygen_auto
  block:
    - name: "Create a variable containing the complete opennssl command to generate the correct number of encryption keys"
      ansible.builtin.set_fact:
        _mariadb_openssl_genkey_cmd: "{{ _mariadb_openssl_genkey_cmd | d('') + 'openssl rand -hex 32 ;' }}"
      loop: "{{ range(1, mariadb_encryption_keygen_count | int + 1) | list }}"

    - name: "Generate the encryption keys with openssl"
      ansible.builtin.shell: "{{ _mariadb_openssl_genkey_cmd }}"
      register: _mariadb_opensslcmd_encryption_keys
      changed_when: _mariadb_opensslcmd_encryption_keys.rc != 0
      tags: ['skip_ansible_lint']

    - name: "Generate the encryption password with openssl"
      ansible.builtin.command: openssl rand -hex 128
      register: _mariadb_opensslcmd_encryption_password
      changed_when: _mariadb_opensslcmd_encryption_password.rc != 0

    - name: "Create a dictionnary for the encryption keys"
      ansible.builtin.set_fact:
        mariadb_encryption_keys: "{{ dict(range(1, mariadb_encryption_keygen_count | int + 1) | list | zip(_mariadb_opensslcmd_encryption_keys.stdout_lines)) }}"
        mariadb_encryption_password: "{{ _mariadb_opensslcmd_encryption_password.stdout }}"


- name: Stat encrypted keys and password files
  block:
    - name: "Stat {{ _mariadb_file_key_management_filekey_path }}"
      ansible.builtin.stat:
        path: "{{ _mariadb_file_key_management_filekey_path }}"
      register: _mariadb_filekeypass_stat

    - name: "Stat {{ _mariadb_file_key_management_filename_path }}"
      ansible.builtin.stat:
        path: "{{ _mariadb_file_key_management_filename_path }}"
      register: _mariadb_fileenc_stat

- name: Fail when keygenmode is manual and mariadb_encryption_keys or mariadb_encryption_password is not defined
  ansible.builtin.fail:
  when:
    - mariadb_encryption_keys is not defined or mariadb_encryption_password is not defined

- name: Build the encryption keys string version
  ansible.builtin.set_fact:
    mariadb_encryption_keys_string: |
      {% for id, value in mariadb_encryption_keys.items() %}
      {{ id }};{{ value }}
      {% endfor %}

- name: Create {{ mariadb_file_key_management_dir }}
  ansible.builtin.file:
    path: "{{ mariadb_file_key_management_dir }}"
    owner: mysql
    group: mysql
    mode: 0755
    state: directory

# This tasks helps is identifying if mariadb_encryption_keys has changed
- name: "Generate keyfile.sha1"
  ansible.builtin.copy:
    content: "{{ mariadb_encryption_keys_string | hash('sha1') }}"
    dest: "{{ mariadb_file_key_management_dir + '/' + mariadb_file_key_management_filename }}.sha1"
    owner: mysql
    group: mysql
    mode: 0600
    backup: true
  when: mariadb_file_key_management_override or not _mariadb_fileenc_stat.stat.exists
  register: _mariadb_keyssha1

# password_file
- name: "Store the encryption password in {{ _mariadb_file_key_management_filekey_path }}"
  ansible.builtin.copy:
    content: "{{ mariadb_encryption_password }}"
    dest: "{{ _mariadb_file_key_management_filekey_path }}"
    owner: mysql
    group: mysql
    mode: 0600
    backup: true
  no_log: "{{ not mariadb_debug }}"
  register: _mariadb_encryption_password_copy
  when: mariadb_file_key_management_override or not _mariadb_filekeypass_stat.stat.exists

# keyfile.enc
- name: "Setup the encrypted keyfile"
  block:
    - name: "Generate the encrypted key file using openssl enc"
      ansible.builtin.command: "openssl enc -aes-256-cbc -md sha1 -pass file:{{ mariadb_file_key_management_filekey }} -out {{ mariadb_file_key_management_filename }}"
      args:
        chdir: "{{ mariadb_file_key_management_dir }}"
        stdin: "{{ mariadb_encryption_keys_string }}"
      no_log: "{{ not mariadb_debug }}"
      when: mariadb_file_key_management_override or
            not _mariadb_fileenc_stat.stat.exists or
            _mariadb_keyssha1 is changed or
            _mariadb_encryption_password_copy is changed

    - name: "Set owner and group on encryted key file"
      ansible.builtin.file:
        path: "{{ _mariadb_file_key_management_filename_path }}"
        owner: mysql
        group: mysql
        mode: 0600
